name: Tests

on:
  pull_request:
    branches: [ develop, main ]
  # Note: Not triggered on push to avoid duplication with staging-validation.yml
  # This workflow provides fast test feedback during PR review

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10  # Prevent hanging (kills job after 10 min)
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests (without coverage)
        id: tests
        run: |
          # Run tests with timeout protection
          timeout 8m npm run test:ci || EXIT_CODE=$?
          
          # If timeout (124), report it
          if [ $EXIT_CODE -eq 124 ]; then
            echo "‚è±Ô∏è Tests timed out after 8 minutes"
            echo "timeout=true" >> $GITHUB_OUTPUT
            exit 1
          fi
          
          # If other error, report it
          if [ $EXIT_CODE -ne 0 ]; then
            echo "‚ùå Tests failed with exit code $EXIT_CODE"
            exit $EXIT_CODE
          fi
          
          echo "‚úÖ Tests completed successfully"
          echo "timeout=false" >> $GITHUB_OUTPUT

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            coverage/
            test-results.json
          retention-days: 30

  coverage:
    name: Generate Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: test  # Only run if tests pass
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate coverage
        run: |
          timeout 12m npm run test:ci:coverage || EXIT_CODE=$?
          
          if [ $EXIT_CODE -eq 124 ]; then
            echo "‚ö†Ô∏è Coverage generation timed out (known issue)"
            echo "Tests passed, coverage failed - this is acceptable"
            exit 0  # Don't fail the build
          fi
          
          exit $EXIT_CODE

      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

      - name: Comment coverage on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            try {
              const coverage = JSON.parse(fs.readFileSync('coverage/coverage-summary.json', 'utf8'));
              const total = coverage.total;
              
              const comment = `## üìä Coverage Report
              
              | Metric | Coverage |
              |--------|----------|
              | Lines | ${total.lines.pct}% |
              | Statements | ${total.statements.pct}% |
              | Functions | ${total.functions.pct}% |
              | Branches | ${total.branches.pct}% |
              `;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (e) {
              console.log('Could not read coverage summary');
            }



